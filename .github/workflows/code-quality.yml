name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-3.13-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry add --group dev black flake8 pytest mypy isort
        poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Check code formatting with black
      run: poetry run black --check src/
      continue-on-error: true

    - name: Check import sorting with isort
      run: poetry run isort --check-only src/
      continue-on-error: true

    - name: Run linting with flake8
      run: poetry run flake8 src/ --max-line-length=88 --extend-ignore=E203,W503
      continue-on-error: true

    - name: Run type checking with mypy
      run: poetry run mypy src/ --ignore-missing-imports
      continue-on-error: true

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run security checks with Bandit
      uses: mdegis/bandit-action@v1.1
      with:
        path: src/
        level: medium
        confidence: medium
#        continue-on-error: true
